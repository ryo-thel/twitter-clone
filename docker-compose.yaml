version: '3.9'

services:
  frontend:
    container_name: leading_basic_c_app
    build:
      context: ./app  # ReactアプリケーションのDockerfileが存在するディレクトリへのパス
      dockerfile: Dockerfile
    command: npm start
    ports:
      - 3000:3000  # Reactアプリケーションのポート番号をホストのポート番号にマッピング
    volumes:
      - ./app:/app  # Reactアプリケーションのソースコードをコンテナにマウント
      - node_modules:/app/node_modules

  api:
    container_name: leading_basic_c_api
    build:
      context: ./backend/api
      dockerfile: Dockerfile
    volumes:
      - ./backend/api:/code
      - images:/backend/api/media/
    env_file:
      - backend/.env
    command: [
      "bash",
      "-c",
      "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ]
    ports:
      - "8000:8000"
    depends_on: 
      db: # dbサービスに依存する
        condition: service_healthy # healthcheckが終わるまで起動待機
    tty: true

  db:
    container_name: leading_basic_c_db
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:
  node_modules:
  images: